{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","createList","goods","listOfGoods","lastGood","pop","length","join","App","state","selectedGoods","removeGoods","setState","toggleGood","good","includes","filter","selectedGood","this","className","type","onClick","map","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qPAGMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAWIC,EAAa,SAACC,GAClB,IAAMC,EAAW,YAAOD,GAClBE,EAAWD,EAAYE,MAE7B,OAAQH,EAAMI,QACZ,KAAK,EACH,MAAO,oBACT,KAAK,EACH,MAAM,GAAN,OAAUJ,EAAM,GAAhB,gBACF,QACE,MAAM,GAAN,OAAUC,EAAYI,KAAK,MAA3B,gBAAwCH,EAAxC,mBAIAI,E,4MACJC,MAAQ,CACNC,cAAe,CAAC,Q,EAGlBC,YAAc,WACZ,EAAKC,SAAS,CACZF,cAAe,M,EAInBG,WAAa,SAACC,GACZ,EAAKF,UAAS,SAACH,GACb,OAAIA,EAAMC,cAAcK,SAASD,GACxB,CACLJ,cAAeD,EAAMC,cAAcM,QAAO,SAAAC,GAAY,OAAIA,IAAiBH,MAIxE,CACLJ,cAAc,CAAEI,GAAH,mBAAYL,EAAMC,qB,4CAKrC,WAAU,IAAD,OACCA,EAAkBQ,KAAKT,MAAvBC,cAER,OACE,sBAAKS,UAAU,MAAf,UACE,+BACGlB,EAAWS,GACX,IACAA,EAAcJ,OAAS,GACtB,wBACEc,KAAK,SACLC,QAASH,KAAKP,YAFhB,kBAQJ,6BACGX,EAAgBsB,KAAI,SAACR,GAAD,OACnB,+BACGA,EACA,IACD,wBACEM,KAAK,SACLC,QAAS,WACP,EAAKR,WAAWC,IAHpB,SAMGJ,EAAcK,SAASD,GACpB,SACA,aAXCA,e,GA5CHS,IAAMC,WAiEThB,ICpGfiB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.0ac064e9.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype Props = {};\n\ntype Good = string;\n\ntype State = {\n  selectedGoods: Good[],\n};\n\nconst createList = (goods: Good[]) => {\n  const listOfGoods = [...goods];\n  const lastGood = listOfGoods.pop();\n\n  switch (goods.length) {\n    case 0:\n      return 'No goods selected';\n    case 1:\n      return `${goods[0]} is selected`;\n    default:\n      return `${listOfGoods.join(', ')} and ${lastGood} are selected`;\n  }\n};\n\nclass App extends React.Component<Props, State> {\n  state = {\n    selectedGoods: ['Jam'],\n  };\n\n  removeGoods = () => {\n    this.setState({\n      selectedGoods: [],\n    });\n  };\n\n  toggleGood = (good: Good) => {\n    this.setState((state: State) => {\n      if (state.selectedGoods.includes(good)) {\n        return {\n          selectedGoods: state.selectedGoods.filter(selectedGood => selectedGood !== good),\n        };\n      }\n\n      return {\n        selectedGoods: [good, ...state.selectedGoods],\n      };\n    });\n  };\n\n  render() {\n    const { selectedGoods } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>\n          {createList(selectedGoods)}\n          {' '}\n          {selectedGoods.length > 0 && (\n            <button\n              type=\"button\"\n              onClick={this.removeGoods}\n            >\n              X\n            </button>\n          )}\n        </h1>\n        <ul>\n          {goodsFromServer.map((good) => (\n            <li key={good}>\n              {good}\n              {' '}\n              <button\n                type=\"button\"\n                onClick={() => {\n                  this.toggleGood(good);\n                }}\n              >\n                {selectedGoods.includes(good)\n                  ? 'Remove'\n                  : 'Select'}\n              </button>\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}